version: 1.1
name: bd multi-machine agnostic

formatVersion: 1
inputs:
  Hostname1:
    type: string
    default: dale01
  User1:
    type: string
    title: User for SSH Access
    default: demosuer
  Hostname2:
    type: string
    default: host02
  User2:
    type: string
    title: User for SSH Access
    default: demosuer
  SelectCloud1:
    type: string
    enum:
      - AWS
      - vSphere
      - Azure
    default: AWS
  SelectCloud2:
    type: string
    enum:
      - AWS
      - vSphere
      - Azure
    default: AWS
  sshkey:
    type: string
    encrypted: true
    title: Enter SSH Key.
    description: The SSH-Key for connectivity
    default: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCxezZxqStrhNGUv49ATk4aypZEN0zqT5Sue4LiXIzjTzsymCKICX1FXnSIM3huaEHo+FUUupFUTExV7zXgoFvWfRDjmP/L2IAGkRElgJZGctEZcfKdxxPGk61/84x66mnVtTM28eMx83RuvEu1PdbL5b1WmgNjqW+MPPqiTuleLcEg3flET7ASCt1Bo6YkKm4AePYOMg3FxfS4dUuFigJNdXyWnY7FS9FIO247DKsKmjsy9g73noQRSRCYdXsYlNXlYNZRvLh2B9KQfdazmZn1KnKYZqokHv2SBc3e7MgZsELUAT/qraXcykf0e8l82skyd7o1mvvuTZdY20fmlb49 brettdrayton@Bretts-MacBook-Pro.local
resources:
  Cloud_Machine_1:
    type: Cloud.Machine
    metadata:
      layoutPosition:
        - 1
        - 1
    properties:
      image: ubuntu 16.04
      flavor: Medium
      slack_call: 'true'
      cloudConfig: |
        #CloudConfig
        hostname: ${input.Hostname1}
        users:
         - name: ${input.User1}
        ssh-authorized-keys:
         - ${input.sshkey}
        sudo: ['ALL=(ALL) NOPASSWD:ALL']
        groups: sudo
        shell: /bin/bash
      constraints:
        - tag: '${"env:" + to_lower(input.SelectCloud1)}'
      networks:
        - name: '${resource.Cloud_Network_1.name}'
  Cloud_Machine_2:
    type: Cloud.Machine
    metadata:
      layoutPosition:
        - 0
        - 0
    properties:
      image: ubuntu 16.04
      flavor: Medium
      slack_call: 'true'
      cloudConfig: |
        #CloudConfig
        hostname: ${input.Hostname2}
        users:
        - name: ${input.User2}
        ssh-authorized-keys:
          - ${input.sshkey}
        sudo: ['ALL=(ALL) NOPASSWD:ALL']
        groups: sudo
        shell: /bin/bash
      constraints:
        - tag: '${"env:" + to_lower(input.SelectCloud2)}'
      networks:
        - name: '${resource.Cloud_Network_2.name}'
  Cloud_Network_1:
    type: Cloud.Network
    metadata:
      layoutPosition:
        - 2
        - 0
    properties:
      name: bobo
      networkType: existing
      constraints:
        - tag: '${"net:" + to_lower(input.SelectCloud1)}'
  Cloud_Network_2:
    type: Cloud.Network
    metadata:
      layoutPosition:
        - 3
        - 0
    properties:
      name: bobo
      networkType: existing
      constraints:
        - tag: '${"net:" + to_lower(input.SelectCloud2)}'
